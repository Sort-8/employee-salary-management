<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.salary.dao.UserDao">

    <select id="getAllUser" resultType="java.util.HashMap">
        SELECT user.*,dept_name,leader,role.role_id,role_key,role_name
        FROM user
        LEFT JOIN dept ON dept.dept_id=user.dept_id
        LEFT JOIN user_role ON user_role.user_id=user.user_id
        LEFT JOIN role ON role.role_id=user_role.role_id
        WHERE user.del_flag=0
        ORDER BY create_time DESC
    </select>

    <select id="getPageUser" resultType="java.util.HashMap">
        SELECT user.*,dept_name,leader,role.role_id,role_key,role_name
        FROM user
        LEFT JOIN dept ON dept.dept_id=user.dept_id
        LEFT JOIN user_role ON user_role.user_id=user.user_id
        LEFT JOIN role ON role.role_id=user_role.role_id
        WHERE user.del_flag=0
        ORDER BY create_time DESC
    </select>

    <select id="getOneUser" resultType="com.salary.entity.User" parameterType="String">
        SELECT user.*,dept_name,leader,role.role_id,role_key,role_name
        FROM user
        LEFT JOIN dept ON dept.dept_id=user.dept_id
        LEFT JOIN user_role ON user_role.user_id=user.user_id
        LEFT JOIN role ON role.role_id=user_role.role_id
        WHERE login_name=#{login_name}
        AND user.del_flag=0
    </select>

    <insert id="insertUser" parameterType="java.util.HashMap">
        insert user(
            dept_id,
            login_name,
            password,
            salt,
            user_name,
            real_name,
            sex,
            email,
            phone_number,
            status,
            del_flag,
            creater,
            create_time,
            remark
            ) value(
            #{dept_id},
            #{login_name},
            #{password},
            #{salt},
            #{user_name},
            #{real_name},
            #{sex},
            #{email},
            #{phone_number},
            #{status},
            0,
            #{creater},
            NOW(),
            #{remark}
        )
    </insert>

    <select id="searchUser" parameterType="java.util.List" resultType="map">
        SELECT user.*,dept_name,leader,role.role_id,role_key,role_name
        FROM user
        LEFT JOIN dept ON dept.dept_id=user.dept_id
        LEFT JOIN user_role ON user_role.user_id=user.user_id
        LEFT JOIN role ON role.role_id=user_role.role_id
        WHERE user.del_flag=0
        <foreach collection="list" index="index" item="item">
            <if test="item.searchType != null and item.searchType != ''
             and item.searchContent != null and item.searchContent != ''">
                and ${item.searchType} like CONCAT('%', #{item.searchContent},'%')
            </if>
        </foreach>
        ORDER BY create_time DESC
    </select>

    <delete id="deleteUserRole">
        delete from user_role
        where user_id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="deleteUser">
        update user
        set del_flag=2,
        update_time=NOW()
        where user_id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="updatePerson" parameterType="java.util.HashMap">
        UPDATE user
        set real_name=#{real_name},
        user_name=#{user_name},
        phone_number=#{phone_number},
        sex=#{sex},
        age=#{age},
        email=#{email},
        updater=#{updater},
        update_time=NOW()
        where user_id=#{user_id}
        and del_flag=0
    </update>

    <update id="updatePersonPassword" parameterType="java.util.HashMap">
        UPDATE user
        set password=#{password},
        updater=#{updater},
        update_time=NOW()
        where user_id=#{user_id}
        and del_flag=0
    </update>

    <update id="updateUser" parameterType="java.util.HashMap">
        UPDATE user
        set real_name=#{real_name},
        user_name=#{user_name},
        dept_id=#{dept_id},
        phone_number=#{phone_number},
        status=#{status},
        sex=#{sex},
        age=#{age},
        email=#{email},
        remark=#{remark},
        updater=#{updater},
        update_time=NOW()
        where user_id=#{user_id}
        and del_flag=0
    </update>

    <update id="changeUserStatus" parameterType="java.util.HashMap">
        update user
        set status=#{status},
        updater=#{updater},
        update_time=NOW()
        where user_id=#{user_id}
    </update>

    <insert id="insertUserRole" parameterType="java.util.HashMap">
        INSERT user_role(
            user_id,
            role_id
        )value(
            #{user_id},
            #{role_id}
        )
    </insert>

    <select id="getUserPerms" resultType="java.util.HashMap" parameterType="String">
        SELECT menu.* FROM user,menu,role_menu,user_role
        where user.user_id=user_role.user_id
        and user_role.role_id=role_menu.role_id
        and role_menu.menu_id=menu.menu_id
    </select>

    <update id="resetUserPassword" parameterType="java.util.HashMap">
        UPDATE user
        SET password=#{password},
        updater=#{updater},
        update_time=NOW()
        WHERE user_id=#{user_id}
    </update>

</mapper>